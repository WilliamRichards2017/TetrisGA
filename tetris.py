from random import randint
import sys

x = 0
y = 0

row = 22
col = 10

tetraminos = [[[[0,0,0,0,0],
                [0,0,0,0,0],
                [0,0,2,1,0],
                [0,0,1,1,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,0,0,0],
                [0,0,2,1,0],
                [0,0,1,1,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,0,0,0],
                [0,0,2,1,0],
                [0,0,1,1,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,0,0,0],
                [0,0,2,1,0],
                [0,0,1,1,0],
                [0,0,0,0,0]]],
              [[[0,0,0,0,0],
                [0,0,0,0,0],
                [0,1,2,1,1],
                [0,0,0,0,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,1,0,0],
                [0,0,2,0,0],
                [0,0,1,0,0],
                [0,0,1,0,0]],
               [[0,0,0,0,0],
                [0,0,0,0,0],
                [0,1,2,1,1],
                [0,0,0,0,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,1,0,0],
                [0,0,2,0,0],
                [0,0,1,0,0],
                [0,0,1,0,0]]],
              [[[0,0,0,0,0],
                [0,0,1,0,0],
                [0,0,2,0,0],
                [0,0,1,1,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,0,0,0],
                [0,1,2,1,0],
                [0,1,0,0,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,1,1,0,0],
                [0,0,2,0,0],
                [0,0,1,0,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,0,1,0],
                [0,1,2,1,0],
                [0,0,0,0,0],
                [0,0,0,0,0]]],
              [[[0,0,0,0,0],
                [0,0,1,0,0],
                [0,0,2,0,0],
                [0,1,1,0,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,1,0,0,0],
                [0,1,2,1,0],
                [0,0,0,0,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,1,1,0],
                [0,0,2,0,0],
                [0,0,1,0,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,0,0,0],
                [0,1,2,1,0],
                [0,0,0,1,0],
                [0,0,0,0,0]]],
              [[[0,0,0,0,0],
                [0,0,0,1,0],
                [0,0,2,1,0],
                [0,0,1,0,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,0,0,0],
                [0,1,2,0,0],
                [0,0,1,1,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,0,1,0],
                [0,0,1,2,0],
                [0,0,1,0,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,0,0,0],
                [0,1,2,0,0],
                [0,0,1,1,0],
                [0,0,0,0,0]]],
              [[[0,0,0,0,0],
                [0,0,1,0,0],
                [0,0,2,1,0],
                [0,0,0,1,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,0,0,0],
                [0,0,2,1,0],
                [0,1,1,0,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,1,0,0],
                [0,0,2,1,0],
                [0,0,0,1,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,0,0,0],
                [0,0,2,1,0],
                [0,1,1,0,0],
                [0,0,0,0,0]]],
              [[[0,0,0,0,0],
                [0,0,0,0,0],
                [0,1,2,1,0],
                [0,0,1,0,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,1,0,0],
                [0,1,2,0,0],
                [0,0,1,0,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,1,0,0],
                [0,1,2,1,0],
                [0,0,0,0,0],
                [0,0,0,0,0]],
               [[0,0,0,0,0],
                [0,0,1,0,0],
                [0,0,2,1,0],
                [0,0,1,0,0],
                [0,0,0,0,0]]]]

def get_tetramino():
    return randint(0, 7)


def rotate_tetramino(rotation):
    return rotation % 4


def remove_row():
    return null

def get_final_piece(block, rotation):
    return tetraminos[block][rotation]

def new_board():
	board = [ [ 0 for x in xrange(col) ]
			for y in xrange(row) ]
	return board

def init_game(self):
		self.board = new_board()
		self.score = 0
		self.lines = 0

def place_piece(final_piece, row):
    height = 22
    while check_collision() != true:
        height-=1
    


def check_collision(board, piece, height, row):
        if height == 5:
            return true
        else:
            return false


print new_board()





##print get_final_piece(get_tetramino(), rotate_tetramino(0))
